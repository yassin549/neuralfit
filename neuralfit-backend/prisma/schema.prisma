// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  profile       Profile?
  messages      Message[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  bio       String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Room {
  id         String   @id @default(cuid())
  title      String
  createdBy  String
  createdAt  DateTime @default(now())
  isPublic   Boolean  @default(true)
  messages   Message[]
}

model Message {
  id        String   @id @default(cuid())
  roomId    String
  userId    String
  role      String   // "user" | "assistant" | "system"
  text      String
  meta      Json?
  createdAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
